/* eslint-disable react/no-unknown-property */
/* eslint-disable react/prop-types */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 circuito-completo.glb --shadows
*/

import { forwardRef, useRef } from 'react';
import { useGLTF } from '@react-three/drei';

const Circuito = forwardRef((props, ref) => {
  const group = useRef();
  const { nodes, materials } = useGLTF('/circuito-completo.glb');
  return (
    <group ref={group} dispose={null}>
      <group name="Scene">
        <group
          name="BezierCircle001"
          position={[0.45, -0.78, -0.38]}
          scale={0.15}
        />
        <group
          name="NurbsCurve001"
          position={[0, 0.05, 0.01]}
          rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        />

        <group name="aspira" rotation={[0, 0, Math.PI / 2]} ref={ref}>
          <mesh
            castShadow
            receiveShadow
            name="Text"
            geometry={nodes.Text.geometry}
            material={materials['Material.003']}
            position={[0, 1.12, 0]}
            rotation={[Math.PI / 2, 0, -Math.PI / 2]}
            scale={0.33}
          />
          <mesh
            name="Text001"
            geometry={nodes.Text001.geometry}
            material={materials['Material.004']}
            position={[0, -1.28, 0]}
            rotation={[Math.PI / 2, 0, -Math.PI / 2]}
            scale={0.33}
          />
          <mesh
            name="NurbsCurve"
            geometry={nodes.NurbsCurve.geometry}
            material={materials['Material.001']}
            position={[0, 0.05, 0.01]}
            rotation={[Math.PI / 2, 0, -Math.PI / 2]}
          />
        </group>

        <mesh
          name="Cube"
          geometry={nodes.Cube.geometry}
          material={materials['Material.009']}
          position={[0, 1.84, 0]}
          scale={[0.28, 0.4, 1.02]}
        />
        <mesh
          name="Cube001"
          geometry={nodes.Cube001.geometry}
          material={materials['Material.011']}
          position={[0, -1.72, 0]}
          scale={[0.28, 0.4, 1.02]}
        />
        <mesh
          name="Cylinder"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder.geometry}
          material={materials['Material.006']}
          position={[0, 0.04, -3.82]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={[0.51, 0.18, 0.51]}
        />
        <mesh
          name="Cylinder001"
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001.geometry}
          material={materials['Material.002']}
          position={[-0.01, 0.05, -2.47]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={[0.51, 0.18, 0.51]}
        />
        <mesh
          name="NurbsCurve002"
          castShadow
          receiveShadow
          geometry={nodes.NurbsCurve002.geometry}
          material={materials['Material.001']}
          position={[0.45, -0.78, -0.38]}
          rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        />
        <group
          name="Cube002"
          position={[-0.01, 1.5, -3.15]}
          scale={[0.33, 0.29, 0.41]}
        >
          <mesh
            name="Cube001_1"
            castShadow
            receiveShadow
            geometry={nodes.Cube001_1.geometry}
            material={nodes.Cube001_1.material}
          />
          <mesh
            name="Cube001_2"
            geometry={nodes.Cube001_2.geometry}
            material={materials['Material.014']}
          />
        </group>
      </group>
    </group>
  );
});
Circuito.displayName = 'Circuito';
useGLTF.preload('/circuito-completo.glb');
export default Circuito;
